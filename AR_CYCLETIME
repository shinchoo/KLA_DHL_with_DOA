SELECT *
, YEAR("OPENDATE") AS "OPEN YEAR"
, INSERT(YEAR("OPENDATE"),5,0,'M') || MONTH("OPENDATE") AS "OPEN YEAR_MONTH"
, INSERT(YEAR("OPENDATE"),5,0,'Q') || QUARTER("OPENDATE") AS "OPEN YEAR_QUARTER"
, YEAR("DATECLOSED") AS "CLOSED YEAR"
, INSERT(YEAR("DATECLOSED"),5,0,MONTH("DATECLOSED")) AS "CLOSED YEAR_MONTH"
, INSERT(YEAR("DATECLOSED"),5,0,'Q') || QUARTER("DATECLOSED") AS "CLOSED YEAR_QUARTER"
, DATEDIFF(DAY,"OPENDATE", "DATECLOSED") + 1 AS AR_CLOSED_DURATION
, DATEDIFF(DAY,"OPENDATE", CURRENT_DATE()) + 1 AS CURRENT_OPEN_DURATION
, CASE
    WHEN CONTAINS(UPPER("PRTFAB"),'MICRON') THEN 'MICRON'
    WHEN CONTAINS(UPPER("PRTFAB"), 'SAMSUNG') THEN 'SAMSUNG'
    WHEN CONTAINS(UPPER("PRTFAB"),'TSMC') THEN 'TSMC'
    WHEN CONTAINS(UPPER("PRTFAB"), 'INTEL') THEN 'INTEL'
    ELSE 'OTHER_CUSTOMER'
  END AS "CUSTOMER2"
, CASE
    WHEN CONTAINS(UPPER("PRTFAB"), 'INTEL') AND CONTAINS(UPPER("PRTFAB"), 'D1') THEN 'INTEL_PTD'
    WHEN CONTAINS(UPPER("PRTFAB"), 'INTEL') AND NOT CONTAINS(UPPER("PRTFAB"), 'D1') THEN 'INTEL_RoW'
    ELSE NULL
  END AS "INTEL_SPECIFIC"
, CASE
    WHEN AR_CLOSED_DURATION IS NULL THEN 1
    ELSE 0
  END AS "CURRENT_BACKLOG"
, CASE
    WHEN CONTAINS(UPPER("STATUS"), 'OPEN') THEN 'Open'
    WHEN CONTAINS(UPPER("STATUS"), 'CLOSED') THEN 'Closed'
    WHEN CONTAINS(UPPER("STATUS"), 'CLOSURE') THEN 'Closure'
    ELSE NULL
  END AS "STATUS2"
, CASE
    WHEN CONTAINS(UPPER("REPAIR_ORG"), 'US') THEN 'US'
    WHEN CONTAINS(UPPER("REPAIR_ORG"), 'IL') THEN 'IL'
    WHEN CONTAINS(UPPER("REPAIR_ORG"), 'SG') THEN 'SG'
    WHEN CONTAINS(UPPER("REPAIR_ORG"), 'DE-') THEN 'DE'
    WHEN CONTAINS(UPPER("REPAIR_ORG"), 'DK') THEN 'DK'
    WHEN CONTAINS(UPPER("REPAIR_ORG"), 'UK') THEN 'UK'
    WHEN CONTAINS(UPPER("REPAIR_ORG"), 'OR') THEN 'OR'
    ELSE 'OTHER'
  END AS "Factory/Org"
, CASE
    WHEN CONTAINS(UPPER("ER"),'DOA') OR CONTAINS(UPPER("ER"),'CUSTOMER-FA') OR CONTAINS(UPPER("ER"),'FA CUSTOMER-FA')
    OR CONTAINS(UPPER("OOBQ"),'DOA') OR CONTAINS(UPPER("OOBQ"),'CUSTOMER-FA') OR CONTAINS(UPPER("OOBQ"),'FA CUSTOMER-FA')
    OR CONTAINS(UPPER("ERCRITICAL"),'DOA') OR CONTAINS(UPPER("ERCRITICAL"),'CUSTOMER-FA') OR CONTAINS(UPPER("ERCRITICAL"),'FA CUSTOMER-FA')
    OR CONTAINS(UPPER("EROTHER"),'DOA') OR CONTAINS(UPPER("EROTHER"),'CUSTOMER-FA') OR CONTAINS(UPPER("EROTHER"),'FA CUSTOMER-FA')
    OR CONTAINS(UPPER("Not Defined AR type"),'DOA') OR CONTAINS(UPPER("Not Defined AR type"),'CUSTOMER-FA') OR CONTAINS(UPPER("Not Defined AR type"),'FA CUSTOMER-FA')
    OR CONTAINS(UPPER("CUSTOMERFA"),'DOA') OR CONTAINS(UPPER("CUSTOMERFA"),'CUSTOMER-FA') OR CONTAINS(UPPER("CUSTOMERFA"),'FA CUSTOMER-FA')
    OR CONTAINS(UPPER("DOA"),'DOA') OR CONTAINS(UPPER("DOA"),'CUSTOMER-FA') OR CONTAINS(UPPER("DOA"),'FA CUSTOMER-FA')
    OR CONTAINS(UPPER("FA"),'DOA') OR CONTAINS(UPPER("FA"),'CUSTOMER-FA') OR CONTAINS(UPPER("FA"),'FA CUSTOMER-FA') THEN 1
    ELSE 0
  END AS "FLAG1"
FROM (SELECT *
FROM (
SELECT ARID
, DOA_PRID
, REPAIR_ORG
, PRTFAB
, PRODUCTFAMILY
, PRTMODEL
, PRTLINE
, OPENDATE
, DATECLOSED
, "STATUS"
, ER
, OOBQ
, ERCRITICAL
, EROTHER
, "Not Defined AR type"
, CUSTOMERFA
, DOA
, FA
, DOAORG

FROM (
SELECT ARNUMBER AS ARID
, PRTNUMBER AS DOA_PRID
, REPAIR_ORG_CODE AS REPAIR_ORG
, PRT_FAB AS PRTFAB
, DOA_FAMILY AS PRODUCTFAMILY
, DOA_MODEL AS PRTMODEL
, DOA_LINE AS PRTLINE
, NC_CREATE_DATE AS OPENDATE
, NC_CALC_DATECLOSED AS DATECLOSED
, "STATUS"
, ER
, OOBQ
, ERCRITICAL
, EROTHER
, "Not Defined AR type"
, CUSTOMERFA
, DOA
, FA
, DOAORG
FROM(
SELECT NC.*
, NULL AS ER
, NULL AS OOBQ
, NULL AS ERCRITICAL
, NULL AS EROTHER
, NULL AS "Not Defined AR type"
, NULL AS CUSTOMERFA
, NULL AS DOA
, NULL AS FA
, 'DOA' AS DOAORG
FROM GEAR.INSIGHTS.MFG_DOA_WITH_NC AS NC
LEFT JOIN GEAR.INSIGHTS.MFG_AR_REPORT AS AR ON NC.PRTNUMBER = AR.PRTNUMBER
WHERE AR.PRTNUMBER IS NULL
  )
  --WHERE "NC_CREATE_DATE" IS NOT NULL
  --AND "NC_CALC_DATECLOSED" IS NOT NULL
  )
  UNION ALL
  SELECT ARID, PRTNUMBER, REPAIR_ORG, PRTFAB, PRODUCTFAMILY, PRTMODEL, PRTLINE, OPENDATE, DATECLOSED, "STATUS", ER, OOBQ, ERCRITICAL, EROTHER, "Not Defined AR type", CUSTOMERFA, DOA, FA, NULL AS DOAORG FROM GEAR.INSIGHTS.MFG_AR_REPORT
  )
  WHERE YEAR(OPENDATE) > 2015)
  --WHERE YEAR(OPENDATE) > 2020
  --AND YEAR(OPENDATE) < 2022
  --AND FLAG1 = 1
   WHERE STATUS = 'Deleted'
